name: Moodle Plugin CI
on:
  workflow_call:
    inputs:
      allow-phpcs-warning:
        description: 'Whether to allow phpcs warnings'
        required: false
        default: false
        type: boolean
      allow-phpcs-error:
        description: 'Whether to allow phpcs errors'
        required: false
        default: false
        type: boolean
      allow-phpdoc-error:
        description: 'Whether to allow phpdoc errors'
        required: false
        default: false
        type: boolean
      allow-mustache-lint-error:
        description: 'Whether to allow mustache lint errors'
        required: false
        default: false
        type: boolean
      allow-grunt-error:
        description: 'Whether to allow grunt errors'
        required: false
        default: false
        type: boolean


jobs:
  setup_jobs:
    runs-on: ubuntu-latest
    outputs:
      static_matrix: ${{ steps.calc-matrix.outputs.static_matrix }}
      test_matrix: ${{ steps.calc-matrix.outputs.test_matrix }}
      moodle_ci_version: ${{ steps.calc-matrix.outputs.moodle_plugin_ci }}
      additional_plugins: ${{ steps.calc-matrix.outputs.additional_plugins }}
      has_tests: ${{ steps.config.outputs.has_tests }}

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          path: plugin

      - name: Read config.json
        id: config
        run: |
          echo "has_tests=${{ hashFiles('plugin/tests') != '' }}" >> $GITHUB_OUTPUT
          if [ -f "plugin/.github/workflows/config.json" ]; then
          {
            echo "content<<EOF"
            cat plugin/.github/workflows/config.json
            echo
            echo EOF
          } >> $GITHUB_OUTPUT
          else
          echo "content=" >> $GITHUB_OUTPUT
          fi

      - name: Generate Matrices
        id: calc-matrix
        uses: learnweb/moodle-workflows-learnweb/parse-matrix-action@main
        with:
          input: ${{ steps.config.outputs.content }}

  sync_pull_request_template:
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    needs: setup_jobs
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          path: plugin
          fetch-depth: 0
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.ref || github.ref_name }}

      - name: Download learnwebs centralized pull request template
        run: |
          mkdir -p plugin/.github     # Create the directory if it doesn't exist
          curl -sSL -o plugin/.github/PULL_REQUEST_TEMPLATE.md \
            https://raw.githubusercontent.com/learnweb/moodle-workflows-learnweb/main/templates/PULL_REQUEST_TEMPLATE.md

      - name: Commit PR template if changed
        working-directory: plugin
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .github/PULL_REQUEST_TEMPLATE.md
          if ! git diff --cached --quiet; then
            branch="sync/templates-$(date +%s)"
            git checkout -b "$branch"
            git commit -m "Sync with Learnweb's centralized pull request template"
            git push -u origin "$branch"
            gh pr create --base "${GITHUB_REF##*/}" --head "$branch" --title "Update templates from Learnweb workflow repository" --body
          else
            echo "No changes to commit"
          fi

  static:
    needs:
      - setup_jobs
      - sync_pull_request_template
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.setup_jobs.outputs.static_matrix) }}
    steps:
      - name: Start PostgreSQL
        run: docker run -p 5432:5432 -e POSTGRES_USER=postgres -e POSTGRES_HOST_AUTH_METHOD=trust -d postgres:14

      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          path: plugin

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          ini-values: max_input_vars=5000
          coverage: none

      - name: Initialise moodle-plugin-ci
        run: |
          composer create-project -n --no-dev --prefer-dist moodlehq/moodle-plugin-ci ci ${{ needs.setup_jobs.outputs.moodle_ci_version }}
          echo $(cd ci/bin; pwd) >> $GITHUB_PATH
          echo $(cd ci/vendor/bin; pwd) >> $GITHUB_PATH
          sudo locale-gen en_AU.UTF-8
          echo "NVM_DIR=$HOME/.nvm" >> $GITHUB_ENV

      - name: Install additional plugins
        if: ${{ fromJSON(needs.setup_jobs.outputs.additional_plugins) != '[]' }}
        run: |
          for plugin in $(echo '${{ needs.setup_jobs.outputs.additional_plugins }}' | jq -r '.[]'); do
            echo "Installing additional plugin: $plugin"
            moodle-plugin-ci add-plugin $plugin
          done

      - name: Install current plugin
        run: |
          moodle-plugin-ci install --plugin ./plugin --db-host=127.0.0.1 --no-init
        env:
          DB: ${{ matrix.database }}
          MOODLE_BRANCH: ${{ matrix.moodle-branch }}

      - name: PHP Lint
        if: ${{ always() }}
        run: moodle-plugin-ci phplint

      - name: PHP Mess Detector
        if: ${{ always() }}
        run: moodle-plugin-ci phpmd

      - name: Moodle Code Checker
        if: ${{ always() }}
        run: moodle-plugin-ci phpcs ${{ !inputs.allow-phpcs-warning && '--max-warnings 0' || '' }}
        continue-on-error: ${{ inputs.allow-phpcs-error }}

      - name: Moodle PHPDoc Checker
        if: ${{ always() }}
        run: moodle-plugin-ci phpdoc
        continue-on-error: ${{ inputs.allow-phpdoc-error }}

      - name: Validating
        if: ${{ always() }}
        run: moodle-plugin-ci validate

      - name: Check upgrade savepoints
        if: ${{ always() }}
        run: moodle-plugin-ci savepoints

      - name: Mustache Lint
        if: ${{ always() }}
        run: moodle-plugin-ci mustache
        continue-on-error: ${{ inputs.allow-mustache-lint-error }}

      - name: Grunt
        if: ${{ always() }}
        run: moodle-plugin-ci grunt
        continue-on-error: ${{ inputs.allow-grunt-error }}

  test:
    runs-on: ubuntu-latest
    needs:
      - setup_jobs
      - sync_pull_request_template
      - static
    if: ${{ needs.setup_jobs.outputs.has_tests == 'true' }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.setup_jobs.outputs.test_matrix) }}
    steps:
      - name: Start MariaDB
        if: matrix.database == 'mariadb'
        run: docker run -p 3306:3306 -e MYSQL_USER=root -e MYSQL_ALLOW_EMPTY_PASSWORD=true -d mariadb:10

      - name: Start PostgreSQL
        if: matrix.database == 'pgsql'
        run: docker run -p 5432:5432 -e POSTGRES_USER=postgres -e POSTGRES_HOST_AUTH_METHOD=trust -d postgres:14

      - name: Start MySQL
        if: matrix.database == 'mysqli'
        run: docker run -p 3306:3306 -e MYSQL_ALLOW_EMPTY_PASSWORD=true -d mysql:8.4

      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          path: plugin

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          ini-values: max_input_vars=5000
          coverage: none

      - name: Initialise moodle-plugin-ci
        run: |
          composer create-project -n --no-dev --prefer-dist moodlehq/moodle-plugin-ci ci ${{ needs.setup_jobs.outputs.moodle_ci_version }}
          echo $(cd ci/bin; pwd) >> $GITHUB_PATH
          echo $(cd ci/vendor/bin; pwd) >> $GITHUB_PATH
          sudo locale-gen en_AU.UTF-8
          echo "NVM_DIR=$HOME/.nvm" >> $GITHUB_ENV

      - name: Install additional plugins
        if: ${{ fromJSON(needs.setup_jobs.outputs.additional_plugins) != '[]' }}
        run: |
          for plugin in $(echo '${{ needs.setup_jobs.outputs.additional_plugins }}' | jq -r '.[]'); do
            echo "Installing additional plugin: $plugin"
            moodle-plugin-ci add-plugin $plugin
          done

      - name: Install current plugin
        run: |
          moodle-plugin-ci install --plugin ./plugin --db-host=127.0.0.1
        env:
          DB: ${{ matrix.database }}
          MOODLE_BRANCH: ${{ matrix.moodle-branch }}

      - name: PHPUnit tests
        if: ${{ always() }}
        run: moodle-plugin-ci phpunit

      - name: Behat features
        if: ${{ always() }}
        run: moodle-plugin-ci behat --profile chrome --auto-rerun 0

      # This step allows to upload Behat faildump (screenshots) as workflow artifact,
      # so it can be downloaded and inspected. You don't need this step if you
      # are not running Behat test. Artifact will be retained for 7 days.
      - name: Upload Behat Faildump
        if: ${{ failure() && steps.behat.outcome == 'failure' }}
        uses: actions/upload-artifact@v4
        with:
          name: Behat Faildump (${{ join(matrix.*, ', ') }})
          path: ${{ github.workspace }}/moodledata/behat_dump
          retention-days: 7
          if-no-files-found: ignore
